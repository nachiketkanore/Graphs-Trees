#include <bits/stdc++.h>
#define int long long
#define MAX (1e7+5)
#define inf 4e18
#define MAX2D 1e3
#define MOD (int)(1e9 + 7)
#define pii pair<int, int>
#define pb push_back
#define all(x) x.begin(),x.end()
#define vii vector<pii>
#define vv vector<vector<int>>
#define vi vector<int>
#define test  \
    int t;    \
    cin >> t; \
    while (t--)
#define raftaar                       \
    ios_base ::sync_with_stdio(0); \
    cin.tie(NULL);                 \
    cout.tie(NULL)
using namespace std;

vector<pair<int,pii>> graph;
vi parent(MAX, -1), sz(MAX, 1);
struct DSU {
    DSU(int n) {
        for(int i=1;i<=n;i++) parent[i] = -1, sz[i] = 1;
    }
    DSU() {}

    int getpar(int n) {
        if(parent[n] < 0) return n;
        return parent[n] = getpar(parent[n]);
    }
    void merge(int x,int y) {
        int a = getpar(x), b = getpar(y);
        if(sz[a] < sz[b]) swap(a,b);
        if(a != b) parent[a] += parent[b], parent[b] = a, sz[a] += sz[b], sz[b] = 0;
    }
    int getsize(int n) {
        int a = getpar(n);
        return sz[a];
    }

} fuck;
int ans = 0;
void kruskal() {
    sort(all(graph));
    for(auto i : graph) {
        int a = i.second.first, b = i.second.second;
        if(fuck.getpar(a) != fuck.getpar(b)) fuck.merge(a,b), ans += i.first;
    }
}

int32_t main() {
	raftaar;
    int n,m;
    cin>>n>>m;
    while(m--) {
        int x,y,wt;
        cin>>x>>y>>wt;
        graph.pb({wt,{x,y}});
    }
    kruskal();
    cout<<ans;
    return 0;
}
